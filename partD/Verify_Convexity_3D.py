

import autograd.numpy as anp
from autograd import elementwise_grad as egrad 
import time 


def genPointsSphere(ndim=5,nRandom=5*10**5):
    anp.random.seed(99)     
    vuRandom=anp.random.normal(0,1,(nRandom,ndim)) ##nPoints on (n-1)D unit sphere of (ndim)D
    vNorm=anp.sqrt(anp.sum(vuRandom**2,axis=1)).reshape((nRandom,1))
    vuRandom[:,:]/=vNorm
    return vuRandom



def func3D_Mises(x1,x2,x3,x4,x5,x6,param):
    return 0.5*((x1-x2)**2+(x1-x3)**2+(x2-x3)**2)+3.0*(x4*x4+x5*x5+x6*x6)        


def func3D_CB2001(x1,x2,x3,x4,x5,x6,param):
    J2=((param[0]*(x1-x2)**2+param[1]*(x2-x3)**2+param[2]*(x1-x3)**2)/6.0+
    param[3]*x4*x4+param[4]*x5*x5+param[5]*x6*x6)
    b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,cc=param[6:]
    J3=(((b1+b2)*x1**3+(b3+b4)*x2**3+(2.0*(b1+b4)-b2-b3)*x3**3)/27.0-
    ((b1*x2+b2*x3)*x1**2+(b3*x3+b4*x1)*x2**2+((b1-b2+b4)*x1+(b1-b3+b4)*x2)*x3**2)/9.0+
    2.0*x1*x2*x3/9.0-
    ((2.0*b9*x2-b8*x3-(2.0*b9-b8)*x1)*x5**2+(2.0*b10*x3-b5*x2-(2.0*b10-b5)*x1)*x4**2+
    ((b6+b7)*x1-b6*x2-b7*x3)*x6**2)/3.0+2.0*b11*x4*x5*x6)
    return J2**3-cc*J3**2


def func3D_Caz2018_Orth(x1,x2,x3,x4,x5,x6,param):
    J2=((param[0]*(x1-x2)**2+param[1]*(x2-x3)**2+param[2]*(x1-x3)**2)/6.0+
    param[3]*x4*x4+param[4]*x5*x5+param[5]*x6*x6)
    b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,cc=param[6:]
    J3=(((b1+b2)*x1**3+(b3+b4)*x2**3+(2.0*(b1+b4)-b2-b3)*x3**3)/27.0-
    ((b1*x2+b2*x3)*x1**2+(b3*x3+b4*x1)*x2**2+((b1-b2+b4)*x1+(b1-b3+b4)*x2)*x3**2)/9.0+
    2.0*x1*x2*x3/9.0-
    ((2.0*b9*x2-b8*x3-(2.0*b9-b8)*x1)*x5**2+(2.0*b10*x3-b5*x2-(2.0*b10-b5)*x1)*x4**2+
    ((b6+b7)*x1-b6*x2-b7*x3)*x6**2)/3.0+2.0*b11*x4*x5*x6)
    aa=param[0]+param[2]; BB=((3**7)*(2**4))/((27.0*aa**3-8.0*cc*(b1+b2)**2)*aa)
    return BB*(J2**4-cc*J2*(J3**2))
    


paramMises=None

paramCB2001=[1.0,1.9,1.391,0.870,1.0,1.0,2.0,0.830,1.50,2.0,0.20,1.0,1.0,1.0,1.0,0.566,1.0,1.2]

paramCaz2018=[0.311,0.505,0.444,0.309,0.309,0.309,0.253,0.206,0.223,0.288,0.220,0.174,0.205,0.220,0.213,0.213,0.172,2.7]


if(0):
    nHom=2
    param=paramMises
    func3D = func3D_Mises
if(1):    
    nHom=8
    param=paramCaz2018
    func3D = func3D_Caz2018_Orth   
if(0):    
    nHom=6
    param=paramCB2001
    func3D = func3D_CB2001


def func(x1,x2,x4,x5,x6,param=param):
    return func3D(x1,x2,0.0,x4,x5,x6,param)    


###print(func(1.0,0.0,0.0,0.0,0.0,param));exit()

df1=egrad(func,0)
df2=egrad(func,1)
df3=egrad(func,2)
df4=egrad(func,3)
df5=egrad(func,4)
h11=egrad(df1,0)
h12=egrad(df1,1)
h13=egrad(df1,2)
h14=egrad(df1,3)
h15=egrad(df1,4)
h22=egrad(df2,1)
h23=egrad(df2,2)
h24=egrad(df2,3)
h25=egrad(df2,4)
h33=egrad(df3,2)
h34=egrad(df3,3)
h35=egrad(df3,4)
h44=egrad(df4,3)
h45=egrad(df4,4)
h55=egrad(df5,4)


tA=time.monotonic()


nRandom=5*10**5
print('Checking convexity at {x} points...'.format(x=nRandom))

vx=genPointsSphere(ndim=5,nRandom=nRandom)

RnHom=1.0/nHom
vtau=(1.0/func(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param)**RnHom).reshape((nRandom,1))
vx[:,0]*=vtau[:,0];vx[:,1]*=vtau[:,0];vx[:,2]*=vtau[:,0]
vx[:,3]*=vtau[:,0];vx[:,4]*=vtau[:,0]

vdf1=df1(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vdf2=df2(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vdf3=df3(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vdf4=df4(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vdf5=df5(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh11=h11(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh12=h12(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh13=h13(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh14=h14(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh15=h15(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh22=h22(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh23=h23(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh24=h24(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh25=h25(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh33=h33(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh34=h34(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh35=h35(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh44=h44(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh45=h45(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))
vh55=h55(vx[:,0],vx[:,1],vx[:,2],vx[:,3],vx[:,4],param).reshape((nRandom,1))

normGF=(vdf1[:,0]*vdf1[:,0]+vdf2[:,0]*vdf2[:,0]+vdf3[:,0]*vdf3[:,0]+vdf4[:,0]*vdf4[:,0]+vdf5[:,0]*vdf5[:,0]).reshape((nRandom,1))
trueNorm=anp.sqrt(normGF).reshape((nRandom,1)) 
vdf1[:,0]/=trueNorm[:,0];vdf2[:,0]/=trueNorm[:,0];vdf3[:,0]/=trueNorm[:,0];vdf4[:,0]/=trueNorm[:,0];vdf5[:,0]/=trueNorm[:,0]
normGF[:,0]=normGF[:,0]*normGF[:,0]


HS11 = (vh22[:,0]*vh33[:,0]*vh44[:,0]*vh55[:,0] - vh22[:,0]*vh33[:,0]*vh45[:,0]**2 - vh22[:,0]*vh34[:,0]**2*vh55[:,0] +
 2*vh22[:,0]*vh34[:,0]*vh35[:,0]*vh45[:,0] - vh22[:,0]*vh35[:,0]**2*vh44[:,0] - vh23[:,0]**2*vh44[:,0]*vh55[:,0] + 
 vh23[:,0]**2*vh45[:,0]**2 + 2*vh23[:,0]*vh24[:,0]*vh34[:,0]*vh55[:,0] - 2*vh23[:,0]*vh24[:,0]*vh35[:,0]*vh45[:,0] - 
 2*vh23[:,0]*vh25[:,0]*vh34[:,0]*vh45[:,0] + 2*vh23[:,0]*vh25[:,0]*vh35[:,0]*vh44[:,0] - vh24[:,0]**2*vh33[:,0]*vh55[:,0] + 
 vh24[:,0]**2*vh35[:,0]**2 + 2*vh24[:,0]*vh25[:,0]*vh33[:,0]*vh45[:,0] - 2*vh24[:,0]*vh25[:,0]*vh34[:,0]*vh35[:,0] - 
 vh25[:,0]**2*vh33[:,0]*vh44[:,0] + vh25[:,0]**2*vh34[:,0]**2).reshape((nRandom,1))
HS12 = -(vh12[:,0]*vh33[:,0]*vh44[:,0]*vh55[:,0] - vh12[:,0]*vh33[:,0]*vh45[:,0]**2 - vh12[:,0]*vh34[:,0]**2*vh55[:,0] + 
 2*vh12[:,0]*vh34[:,0]*vh35[:,0]*vh45[:,0] - vh12[:,0]*vh35[:,0]**2*vh44[:,0] - vh13[:,0]*vh23[:,0]*vh44[:,0]*vh55[:,0] + 
 vh13[:,0]*vh23[:,0]*vh45[:,0]**2 + vh13[:,0]*vh24[:,0]*vh34[:,0]*vh55[:,0] - vh13[:,0]*vh24[:,0]*vh35[:,0]*vh45[:,0] - 
 vh13[:,0]*vh25[:,0]*vh34[:,0]*vh45[:,0] + vh13[:,0]*vh25[:,0]*vh35[:,0]*vh44[:,0] + vh14[:,0]*vh23[:,0]*vh34[:,0]*vh55[:,0] - 
 vh14[:,0]*vh23[:,0]*vh35[:,0]*vh45[:,0] - vh14[:,0]*vh24[:,0]*vh33[:,0]*vh55[:,0] + vh14[:,0]*vh24[:,0]*vh35[:,0]**2 + 
 vh14[:,0]*vh25[:,0]*vh33[:,0]*vh45[:,0] - vh14[:,0]*vh25[:,0]*vh34[:,0]*vh35[:,0] - vh15[:,0]*vh23[:,0]*vh34[:,0]*vh45[:,0] + 
 vh15[:,0]*vh23[:,0]*vh35[:,0]*vh44[:,0] + vh15[:,0]*vh24[:,0]*vh33[:,0]*vh45[:,0] - vh15[:,0]*vh24[:,0]*vh34[:,0]*vh35[:,0] - 
 vh15[:,0]*vh25[:,0]*vh33[:,0]*vh44[:,0] + vh15[:,0]*vh25[:,0]*vh34[:,0]**2).reshape((nRandom,1))
HS13 = (vh12[:,0]*vh23[:,0]*vh44[:,0]*vh55[:,0] - vh12[:,0]*vh23[:,0]*vh45[:,0]**2 - vh12[:,0]*vh24[:,0]*vh34[:,0]*vh55[:,0] +
 vh12[:,0]*vh24[:,0]*vh35[:,0]*vh45[:,0] + vh12[:,0]*vh25[:,0]*vh34[:,0]*vh45[:,0] - vh12[:,0]*vh25[:,0]*vh35[:,0]*vh44[:,0] - 
 vh13[:,0]*vh22[:,0]*vh44[:,0]*vh55[:,0] + vh13[:,0]*vh22[:,0]*vh45[:,0]**2 + vh13[:,0]*vh24[:,0]**2*vh55[:,0] - 
 2*vh13[:,0]*vh24[:,0]*vh25[:,0]*vh45[:,0] + vh13[:,0]*vh25[:,0]**2*vh44[:,0] + vh14[:,0]*vh22[:,0]*vh34[:,0]*vh55[:,0] - 
 vh14[:,0]*vh22[:,0]*vh35[:,0]*vh45[:,0] - vh14[:,0]*vh23[:,0]*vh24[:,0]*vh55[:,0] + vh14[:,0]*vh23[:,0]*vh25[:,0]*vh45[:,0] + 
 vh14[:,0]*vh24[:,0]*vh25[:,0]*vh35[:,0] - vh14[:,0]*vh25[:,0]**2*vh34[:,0] - vh15[:,0]*vh22[:,0]*vh34[:,0]*vh45[:,0] + 
 vh15[:,0]*vh22[:,0]*vh35[:,0]*vh44[:,0] + vh15[:,0]*vh23[:,0]*vh24[:,0]*vh45[:,0] - vh15[:,0]*vh23[:,0]*vh25[:,0]*vh44[:,0] - 
 vh15[:,0]*vh24[:,0]**2*vh35[:,0] + vh15[:,0]*vh24[:,0]*vh25[:,0]*vh34[:,0]).reshape((nRandom,1))
HS14 = -(vh12[:,0]*vh23[:,0]*vh34[:,0]*vh55[:,0] - vh12[:,0]*vh23[:,0]*vh35[:,0]*vh45[:,0] - vh12[:,0]*vh24[:,0]*vh33[:,0]*vh55[:,0] +
 vh12[:,0]*vh24[:,0]*vh35[:,0]**2 + vh12[:,0]*vh25[:,0]*vh33[:,0]*vh45[:,0] - vh12[:,0]*vh25[:,0]*vh34[:,0]*vh35[:,0] - 
 vh13[:,0]*vh22[:,0]*vh34[:,0]*vh55[:,0] + vh13[:,0]*vh22[:,0]*vh35[:,0]*vh45[:,0] + vh13[:,0]*vh23[:,0]*vh24[:,0]*vh55[:,0] - 
 vh13[:,0]*vh23[:,0]*vh25[:,0]*vh45[:,0] - vh13[:,0]*vh24[:,0]*vh25[:,0]*vh35[:,0] + vh13[:,0]*vh25[:,0]**2*vh34[:,0] + 
 vh14[:,0]*vh22[:,0]*vh33[:,0]*vh55[:,0] - vh14[:,0]*vh22[:,0]*vh35[:,0]**2 - vh14[:,0]*vh23[:,0]**2*vh55[:,0] + 
 2*vh14[:,0]*vh23[:,0]*vh25[:,0]*vh35[:,0] - vh14[:,0]*vh25[:,0]**2*vh33[:,0] - vh15[:,0]*vh22[:,0]*vh33[:,0]*vh45[:,0] + 
 vh15[:,0]*vh22[:,0]*vh34[:,0]*vh35[:,0] + vh15[:,0]*vh23[:,0]**2*vh45[:,0] - vh15[:,0]*vh23[:,0]*vh24[:,0]*vh35[:,0] - 
 vh15[:,0]*vh23[:,0]*vh25[:,0]*vh34[:,0] + vh15[:,0]*vh24[:,0]*vh25[:,0]*vh33[:,0]).reshape((nRandom,1))
HS15 = (vh12[:,0]*vh23[:,0]*vh34[:,0]*vh45[:,0] - vh12[:,0]*vh23[:,0]*vh35[:,0]*vh44[:,0] - vh12[:,0]*vh24[:,0]*vh33[:,0]*vh45[:,0] +
 vh12[:,0]*vh24[:,0]*vh34[:,0]*vh35[:,0] + vh12[:,0]*vh25[:,0]*vh33[:,0]*vh44[:,0] - vh12[:,0]*vh25[:,0]*vh34[:,0]**2 - 
 vh13[:,0]*vh22[:,0]*vh34[:,0]*vh45[:,0] + vh13[:,0]*vh22[:,0]*vh35[:,0]*vh44[:,0] + vh13[:,0]*vh23[:,0]*vh24[:,0]*vh45[:,0] - 
 vh13[:,0]*vh23[:,0]*vh25[:,0]*vh44[:,0] - vh13[:,0]*vh24[:,0]**2*vh35[:,0] + vh13[:,0]*vh24[:,0]*vh25[:,0]*vh34[:,0] + 
 vh14[:,0]*vh22[:,0]*vh33[:,0]*vh45[:,0] - vh14[:,0]*vh22[:,0]*vh34[:,0]*vh35[:,0] - vh14[:,0]*vh23[:,0]**2*vh45[:,0] + 
 vh14[:,0]*vh23[:,0]*vh24[:,0]*vh35[:,0] + vh14[:,0]*vh23[:,0]*vh25[:,0]*vh34[:,0] - vh14[:,0]*vh24[:,0]*vh25[:,0]*vh33[:,0] - 
 vh15[:,0]*vh22[:,0]*vh33[:,0]*vh44[:,0] + vh15[:,0]*vh22[:,0]*vh34[:,0]**2 + vh15[:,0]*vh23[:,0]**2*vh44[:,0] - 
 2*vh15[:,0]*vh23[:,0]*vh24[:,0]*vh34[:,0] + vh15[:,0]*vh24[:,0]**2*vh33[:,0]).reshape((nRandom,1))
HS22 = (vh11[:,0]*vh33[:,0]*vh44[:,0]*vh55[:,0] - vh11[:,0]*vh33[:,0]*vh45[:,0]**2 - vh11[:,0]*vh34[:,0]**2*vh55[:,0] + 
 2*vh11[:,0]*vh34[:,0]*vh35[:,0]*vh45[:,0] - vh11[:,0]*vh35[:,0]**2*vh44[:,0] - vh13[:,0]**2*vh44[:,0]*vh55[:,0] + 
 vh13[:,0]**2*vh45[:,0]**2 + 2*vh13[:,0]*vh14[:,0]*vh34[:,0]*vh55[:,0] - 2*vh13[:,0]*vh14[:,0]*vh35[:,0]*vh45[:,0] - 
 2*vh13[:,0]*vh15[:,0]*vh34[:,0]*vh45[:,0] + 2*vh13[:,0]*vh15[:,0]*vh35[:,0]*vh44[:,0] - vh14[:,0]**2*vh33[:,0]*vh55[:,0] + 
 vh14[:,0]**2*vh35[:,0]**2 + 2*vh14[:,0]*vh15[:,0]*vh33[:,0]*vh45[:,0] - 2*vh14[:,0]*vh15[:,0]*vh34[:,0]*vh35[:,0] - 
 vh15[:,0]**2*vh33[:,0]*vh44[:,0] + vh15[:,0]**2*vh34[:,0]**2).reshape((nRandom,1))
HS23 = -(vh11[:,0]*vh23[:,0]*vh44[:,0]*vh55[:,0] - vh11[:,0]*vh23[:,0]*vh45[:,0]**2 - vh11[:,0]*vh24[:,0]*vh34[:,0]*vh55[:,0] + 
 vh11[:,0]*vh24[:,0]*vh35[:,0]*vh45[:,0] + vh11[:,0]*vh25[:,0]*vh34[:,0]*vh45[:,0] - vh11[:,0]*vh25[:,0]*vh35[:,0]*vh44[:,0] - 
 vh12[:,0]*vh13[:,0]*vh44[:,0]*vh55[:,0] + vh12[:,0]*vh13[:,0]*vh45[:,0]**2 + vh12[:,0]*vh14[:,0]*vh34[:,0]*vh55[:,0] - 
 vh12[:,0]*vh14[:,0]*vh35[:,0]*vh45[:,0] - vh12[:,0]*vh15[:,0]*vh34[:,0]*vh45[:,0] + vh12[:,0]*vh15[:,0]*vh35[:,0]*vh44[:,0] + 
 vh13[:,0]*vh14[:,0]*vh24[:,0]*vh55[:,0] - vh13[:,0]*vh14[:,0]*vh25[:,0]*vh45[:,0] - vh13[:,0]*vh15[:,0]*vh24[:,0]*vh45[:,0] + 
 vh13[:,0]*vh15[:,0]*vh25[:,0]*vh44[:,0] - vh14[:,0]**2*vh23[:,0]*vh55[:,0] + vh14[:,0]**2*vh25[:,0]*vh35[:,0] + 
 2*vh14[:,0]*vh15[:,0]*vh23[:,0]*vh45[:,0] - vh14[:,0]*vh15[:,0]*vh24[:,0]*vh35[:,0] - vh14[:,0]*vh15[:,0]*vh25[:,0]*vh34[:,0] - 
 vh15[:,0]**2*vh23[:,0]*vh44[:,0] + vh15[:,0]**2*vh24[:,0]*vh34[:,0]).reshape((nRandom,1))
HS24 = (vh11[:,0]*vh23[:,0]*vh34[:,0]*vh55[:,0] - vh11[:,0]*vh23[:,0]*vh35[:,0]*vh45[:,0] - vh11[:,0]*vh24[:,0]*vh33[:,0]*vh55[:,0] +
 vh11[:,0]*vh24[:,0]*vh35[:,0]**2 + vh11[:,0]*vh25[:,0]*vh33[:,0]*vh45[:,0] - vh11[:,0]*vh25[:,0]*vh34[:,0]*vh35[:,0] - 
 vh12[:,0]*vh13[:,0]*vh34[:,0]*vh55[:,0] + vh12[:,0]*vh13[:,0]*vh35[:,0]*vh45[:,0] + vh12[:,0]*vh14[:,0]*vh33[:,0]*vh55[:,0] - 
 vh12[:,0]*vh14[:,0]*vh35[:,0]**2 - vh12[:,0]*vh15[:,0]*vh33[:,0]*vh45[:,0] + vh12[:,0]*vh15[:,0]*vh34[:,0]*vh35[:,0] + 
 vh13[:,0]**2*vh24[:,0]*vh55[:,0] - vh13[:,0]**2*vh25[:,0]*vh45[:,0] - vh13[:,0]*vh14[:,0]*vh23[:,0]*vh55[:,0] + 
 vh13[:,0]*vh14[:,0]*vh25[:,0]*vh35[:,0] + vh13[:,0]*vh15[:,0]*vh23[:,0]*vh45[:,0] - 2*vh13[:,0]*vh15[:,0]*vh24[:,0]*vh35[:,0] + 
 vh13[:,0]*vh15[:,0]*vh25[:,0]*vh34[:,0] + vh14[:,0]*vh15[:,0]*vh23[:,0]*vh35[:,0] - vh14[:,0]*vh15[:,0]*vh25[:,0]*vh33[:,0] - 
 vh15[:,0]**2*vh23[:,0]*vh34[:,0] + vh15[:,0]**2*vh24[:,0]*vh33[:,0]).reshape((nRandom,1))
HS25 = -(vh11[:,0]*vh23[:,0]*vh34[:,0]*vh45[:,0] - vh11[:,0]*vh23[:,0]*vh35[:,0]*vh44[:,0] - vh11[:,0]*vh24[:,0]*vh33[:,0]*vh45[:,0] + 
 vh11[:,0]*vh24[:,0]*vh34[:,0]*vh35[:,0] + vh11[:,0]*vh25[:,0]*vh33[:,0]*vh44[:,0] - vh11[:,0]*vh25[:,0]*vh34[:,0]**2 - 
 vh12[:,0]*vh13[:,0]*vh34[:,0]*vh45[:,0] + vh12[:,0]*vh13[:,0]*vh35[:,0]*vh44[:,0] + vh12[:,0]*vh14[:,0]*vh33[:,0]*vh45[:,0] - 
 vh12[:,0]*vh14[:,0]*vh34[:,0]*vh35[:,0] - vh12[:,0]*vh15[:,0]*vh33[:,0]*vh44[:,0] + vh12[:,0]*vh15[:,0]*vh34[:,0]**2 + 
 vh13[:,0]**2*vh24[:,0]*vh45[:,0] - vh13[:,0]**2*vh25[:,0]*vh44[:,0] - vh13[:,0]*vh14[:,0]*vh23[:,0]*vh45[:,0] - 
 vh13[:,0]*vh14[:,0]*vh24[:,0]*vh35[:,0] + 2*vh13[:,0]*vh14[:,0]*vh25[:,0]*vh34[:,0] + vh13[:,0]*vh15[:,0]*vh23[:,0]*vh44[:,0] - 
 vh13[:,0]*vh15[:,0]*vh24[:,0]*vh34[:,0] + vh14[:,0]**2*vh23[:,0]*vh35[:,0] - vh14[:,0]**2*vh25[:,0]*vh33[:,0] - 
 vh14[:,0]*vh15[:,0]*vh23[:,0]*vh34[:,0] + vh14[:,0]*vh15[:,0]*vh24[:,0]*vh33[:,0]).reshape((nRandom,1))
HS33 = (vh11[:,0]*vh22[:,0]*vh44[:,0]*vh55[:,0] - vh11[:,0]*vh22[:,0]*vh45[:,0]**2 - vh11[:,0]*vh24[:,0]**2*vh55[:,0] +
 2*vh11[:,0]*vh24[:,0]*vh25[:,0]*vh45[:,0] - vh11[:,0]*vh25[:,0]**2*vh44[:,0] - vh12[:,0]**2*vh44[:,0]*vh55[:,0] + 
 vh12[:,0]**2*vh45[:,0]**2 + 2*vh12[:,0]*vh14[:,0]*vh24[:,0]*vh55[:,0] - 2*vh12[:,0]*vh14[:,0]*vh25[:,0]*vh45[:,0] - 
 2*vh12[:,0]*vh15[:,0]*vh24[:,0]*vh45[:,0] + 2*vh12[:,0]*vh15[:,0]*vh25[:,0]*vh44[:,0] - vh14[:,0]**2*vh22[:,0]*vh55[:,0] + 
 vh14[:,0]**2*vh25[:,0]**2 + 2*vh14[:,0]*vh15[:,0]*vh22[:,0]*vh45[:,0] - 2*vh14[:,0]*vh15[:,0]*vh24[:,0]*vh25[:,0] - 
 vh15[:,0]**2*vh22[:,0]*vh44[:,0] + vh15[:,0]**2*vh24[:,0]**2).reshape((nRandom,1))
HS34 = -(vh11[:,0]*vh22[:,0]*vh34[:,0]*vh55[:,0] - vh11[:,0]*vh22[:,0]*vh35[:,0]*vh45[:,0] - vh11[:,0]*vh23[:,0]*vh24[:,0]*vh55[:,0] +
 vh11[:,0]*vh23[:,0]*vh25[:,0]*vh45[:,0] + vh11[:,0]*vh24[:,0]*vh25[:,0]*vh35[:,0] - vh11[:,0]*vh25[:,0]**2*vh34[:,0] - 
 vh12[:,0]**2*vh34[:,0]*vh55[:,0] + vh12[:,0]**2*vh35[:,0]*vh45[:,0] + vh12[:,0]*vh13[:,0]*vh24[:,0]*vh55[:,0] - 
 vh12[:,0]*vh13[:,0]*vh25[:,0]*vh45[:,0] + vh12[:,0]*vh14[:,0]*vh23[:,0]*vh55[:,0] - vh12[:,0]*vh14[:,0]*vh25[:,0]*vh35[:,0] - 
 vh12[:,0]*vh15[:,0]*vh23[:,0]*vh45[:,0] - vh12[:,0]*vh15[:,0]*vh24[:,0]*vh35[:,0] + 2*vh12[:,0]*vh15[:,0]*vh25[:,0]*vh34[:,0] - 
 vh13[:,0]*vh14[:,0]*vh22[:,0]*vh55[:,0] + vh13[:,0]*vh14[:,0]*vh25[:,0]**2 + vh13[:,0]*vh15[:,0]*vh22[:,0]*vh45[:,0] - 
 vh13[:,0]*vh15[:,0]*vh24[:,0]*vh25[:,0] + vh14[:,0]*vh15[:,0]*vh22[:,0]*vh35[:,0] - vh14[:,0]*vh15[:,0]*vh23[:,0]*vh25[:,0] - 
 vh15[:,0]**2*vh22[:,0]*vh34[:,0] + vh15[:,0]**2*vh23[:,0]*vh24[:,0]).reshape((nRandom,1))
HS35 = (vh11[:,0]*vh22[:,0]*vh34[:,0]*vh45[:,0] - vh11[:,0]*vh22[:,0]*vh35[:,0]*vh44[:,0] - vh11[:,0]*vh23[:,0]*vh24[:,0]*vh45[:,0] + 
 vh11[:,0]*vh23[:,0]*vh25[:,0]*vh44[:,0] + vh11[:,0]*vh24[:,0]**2*vh35[:,0] - vh11[:,0]*vh24[:,0]*vh25[:,0]*vh34[:,0] - 
 vh12[:,0]**2*vh34[:,0]*vh45[:,0] + vh12[:,0]**2*vh35[:,0]*vh44[:,0] + vh12[:,0]*vh13[:,0]*vh24[:,0]*vh45[:,0] - 
 vh12[:,0]*vh13[:,0]*vh25[:,0]*vh44[:,0] + vh12[:,0]*vh14[:,0]*vh23[:,0]*vh45[:,0] - 2*vh12[:,0]*vh14[:,0]*vh24[:,0]*vh35[:,0] + 
 vh12[:,0]*vh14[:,0]*vh25[:,0]*vh34[:,0] - vh12[:,0]*vh15[:,0]*vh23[:,0]*vh44[:,0] + vh12[:,0]*vh15[:,0]*vh24[:,0]*vh34[:,0] - 
 vh13[:,0]*vh14[:,0]*vh22[:,0]*vh45[:,0] + vh13[:,0]*vh14[:,0]*vh24[:,0]*vh25[:,0] + vh13[:,0]*vh15[:,0]*vh22[:,0]*vh44[:,0] - 
 vh13[:,0]*vh15[:,0]*vh24[:,0]**2 + vh14[:,0]**2*vh22[:,0]*vh35[:,0] - vh14[:,0]**2*vh23[:,0]*vh25[:,0] - 
 vh14[:,0]*vh15[:,0]*vh22[:,0]*vh34[:,0] + vh14[:,0]*vh15[:,0]*vh23[:,0]*vh24[:,0]).reshape((nRandom,1))
HS44 = (vh11[:,0]*vh22[:,0]*vh33[:,0]*vh55[:,0] - vh11[:,0]*vh22[:,0]*vh35[:,0]**2 - vh11[:,0]*vh23[:,0]**2*vh55[:,0] +
 2*vh11[:,0]*vh23[:,0]*vh25[:,0]*vh35[:,0] - vh11[:,0]*vh25[:,0]**2*vh33[:,0] - vh12[:,0]**2*vh33[:,0]*vh55[:,0] + 
 vh12[:,0]**2*vh35[:,0]**2 + 2*vh12[:,0]*vh13[:,0]*vh23[:,0]*vh55[:,0] - 2*vh12[:,0]*vh13[:,0]*vh25[:,0]*vh35[:,0] - 
 2*vh12[:,0]*vh15[:,0]*vh23[:,0]*vh35[:,0] + 2*vh12[:,0]*vh15[:,0]*vh25[:,0]*vh33[:,0] - vh13[:,0]**2*vh22[:,0]*vh55[:,0] + 
 vh13[:,0]**2*vh25[:,0]**2 + 2*vh13[:,0]*vh15[:,0]*vh22[:,0]*vh35[:,0] - 2*vh13[:,0]*vh15[:,0]*vh23[:,0]*vh25[:,0] - 
 vh15[:,0]**2*vh22[:,0]*vh33[:,0] + vh15[:,0]**2*vh23[:,0]**2).reshape((nRandom,1))
HS45 = -(vh11[:,0]*vh22[:,0]*vh33[:,0]*vh45[:,0] - vh11[:,0]*vh22[:,0]*vh34[:,0]*vh35[:,0] - vh11[:,0]*vh23[:,0]**2*vh45[:,0] + 
 vh11[:,0]*vh23[:,0]*vh24[:,0]*vh35[:,0] + vh11[:,0]*vh23[:,0]*vh25[:,0]*vh34[:,0] - vh11[:,0]*vh24[:,0]*vh25[:,0]*vh33[:,0] - 
 vh12[:,0]**2*vh33[:,0]*vh45[:,0] + vh12[:,0]**2*vh34[:,0]*vh35[:,0] + 2*vh12[:,0]*vh13[:,0]*vh23[:,0]*vh45[:,0] - 
 vh12[:,0]*vh13[:,0]*vh24[:,0]*vh35[:,0] - vh12[:,0]*vh13[:,0]*vh25[:,0]*vh34[:,0] - vh12[:,0]*vh14[:,0]*vh23[:,0]*vh35[:,0] + 
 vh12[:,0]*vh14[:,0]*vh25[:,0]*vh33[:,0] - vh12[:,0]*vh15[:,0]*vh23[:,0]*vh34[:,0] + vh12[:,0]*vh15[:,0]*vh24[:,0]*vh33[:,0] - 
 vh13[:,0]**2*vh22[:,0]*vh45[:,0] + vh13[:,0]**2*vh24[:,0]*vh25[:,0] + vh13[:,0]*vh14[:,0]*vh22[:,0]*vh35[:,0] - 
 vh13[:,0]*vh14[:,0]*vh23[:,0]*vh25[:,0] + vh13[:,0]*vh15[:,0]*vh22[:,0]*vh34[:,0] - vh13[:,0]*vh15[:,0]*vh23[:,0]*vh24[:,0] - 
 vh14[:,0]*vh15[:,0]*vh22[:,0]*vh33[:,0] + vh14[:,0]*vh15[:,0]*vh23[:,0]**2).reshape((nRandom,1))
HS55 = (vh11[:,0]*vh22[:,0]*vh33[:,0]*vh44[:,0] - vh11[:,0]*vh22[:,0]*vh34[:,0]**2 - vh11[:,0]*vh23[:,0]**2*vh44[:,0] + 
 2*vh11[:,0]*vh23[:,0]*vh24[:,0]*vh34[:,0] - vh11[:,0]*vh24[:,0]**2*vh33[:,0] - vh12[:,0]**2*vh33[:,0]*vh44[:,0] + vh12[:,0]**2*vh34[:,0]**2 + 
 2*vh12[:,0]*vh13[:,0]*vh23[:,0]*vh44[:,0] - 2*vh12[:,0]*vh13[:,0]*vh24[:,0]*vh34[:,0] - 2*vh12[:,0]*vh14[:,0]*vh23[:,0]*vh34[:,0] + 
 2*vh12[:,0]*vh14[:,0]*vh24[:,0]*vh33[:,0] - vh13[:,0]**2*vh22[:,0]*vh44[:,0] + vh13[:,0]**2*vh24[:,0]**2 + 2*vh13[:,0]*vh14[:,0]*vh22[:,0]*vh34[:,0] - 
 2*vh13[:,0]*vh14[:,0]*vh23[:,0]*vh24[:,0] - vh14[:,0]**2*vh22[:,0]*vh33[:,0] + vh14[:,0]**2*vh23[:,0]**2).reshape((nRandom,1))

HS = anp.zeros((nRandom,1))
HS[:,0]=HS11[:,0]*vdf1[:,0]*vdf1[:,0]+HS22[:,0]*vdf2[:,0]*vdf2[:,0]+HS33[:,0]*vdf3[:,0]*vdf3[:,0]+HS44[:,0]*vdf4[:,0]*vdf4[:,0]+HS55[:,0]*vdf5[:,0]*vdf5[:,0]
HS[:,0]+=2.0*(vdf1[:,0]*(HS12[:,0]*vdf2[:,0]+HS13[:,0]*vdf3[:,0]+HS14[:,0]*vdf4[:,0]+HS15[:,0]*vdf5[:,0])+
         vdf2[:,0]*(HS23[:,0]*vdf3[:,0]+HS24[:,0]*vdf4[:,0]+HS25[:,0]*vdf5[:,0])+
         vdf3[:,0]*(HS34[:,0]*vdf4[:,0]+HS35[:,0]*vdf5[:,0])+HS45[:,0]*vdf4[:,0]*vdf5[:,0])
KG= HS[:,0]/normGF[:,0]

kmin,kmax=anp.argmin(KG),anp.argmax(KG)
KGmin,KGmax=KG[kmin],KG[kmax]

lp1 = anp.min(vh11)
lp2 = anp.min(vh11[:,0]*vh22[:,0]-vh12[:,0]*vh12[:,0])
d3 = (vh11[:,0]*(vh22[:,0]*vh33[:,0]-vh23[:,0]*vh23[:,0]) - 
      vh12[:,0]*(vh12[:,0]*vh33[:,0]-vh13[:,0]*vh23[:,0]) +
      vh13[:,0]*(vh12[:,0]*vh23[:,0]-vh13[:,0]*vh22[:,0]))
lp3 = anp.min(d3)
lp4 = anp.min(HS55)
lp5 = anp.min(vh11[:,0]*HS11[:,0]+vh12[:,0]*HS12[:,0]+vh13[:,0]*HS13[:,0]+vh14[:,0]*HS14[:,0]+vh15[:,0]*HS15[:,0])    

tB=time.monotonic()

print('execution time = {x} (s)'.format(x=tB-tA))
print('Leading principal minors:')
print(lp1, lp2, lp3, lp4, lp5)
print('KGmin = ', KGmin)
print(vx[kmin,:])
print('KGmax = ', KGmax)
print(vx[kmax,:])



